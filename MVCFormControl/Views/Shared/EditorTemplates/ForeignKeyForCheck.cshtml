@model  string
@{
    var name = ViewData.TemplateInfo.GetFullHtmlFieldName("");
    var displayname = ViewData.ModelMetadata.DisplayName;
    List<SelectListItem> renderList = new List<SelectListItem>();
    renderList = (List<SelectListItem>)ViewData["Data_" + name];
}


@Html.Kendo().Window().Name(name + "_window").Title("请选择" + displayname).Content(
    @<text>

<div class="k-checklist-tool">
    <a id="@(name + "_checkall")" href="javascript:;">全选</a> /  <a id="@(name + "_reset")"  href="javascript:;">重置</a>
</div>
<div class="k-checklist k-window-checklist clearfix">
    @for (int i = 0; i < renderList.Count; i++)
    {
        <span class="k-checklist-item">
            <input type="checkbox" id="@(name + "_check" + i.ToString())" name="@Html.Raw(name + "_check")" value="@renderList[i].Value" data-text="@renderList[i].Text" checked="@renderList[i].Selected" />
            <label for="@(name + "_check" + i.ToString())" data-for="@name" >
                @renderList[i].Text</label>
        </span>
    }
</div>
<div class="k-window-footer">
    <button type="button" id="@(name + "_save")" class="k-button" ><span class="k-icon k-i-tick"></span>确认</button>
</div>
</text>
).Width(600).Modal(true).Visible(false)

<input type="text" disabled="disabled" class="k-textbox single-line text-box" id="@(name + "_text")" title="" />
@Html.TextBoxFor(m => m, new { tabindex = -1, @class = "field-valid-text" })
<button type="button" id="@(name + "_select")" class="k-button" ><span class="k-icon k-add"></span>选择</button>

<script type="text/javascript">
    $(function () {
        $('#@name').foreignKeyForCheck({});
    });
</script>
